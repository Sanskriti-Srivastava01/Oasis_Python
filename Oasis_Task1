import tkinter as tk
from tkinter import messagebox
import sqlite3
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg

# Connect to SQLite database
conn = sqlite3.connect('bmi_data.db')
c = conn.cursor()

# Create table if not exists
c.execute('''CREATE TABLE IF NOT EXISTS bmi_records (
             id INTEGER PRIMARY KEY,
             name TEXT NOT NULL,
             weight REAL NOT NULL,
             height REAL NOT NULL,
             bmi REAL NOT NULL,
             date TEXT NOT NULL
             )''')
conn.commit()

# Function to calculate BMI
def calculate_bmi(weight, height):
    bmi = weight / (height ** 2)
    return round(bmi, 2)

# Function to save BMI record
def save_record():
    name = entry_name.get()
    weight = float(entry_weight.get())
    height = float(entry_height.get())
    bmi = calculate_bmi(weight, height)
    
    c.execute("INSERT INTO bmi_records (name, weight, height, bmi, date) VALUES (?, ?, ?, ?, datetime('now'))", (name, weight, height, bmi))
    conn.commit()
    
    messagebox.showinfo("BMI Result", f"Hello {name}, your BMI is {bmi}")

# Function to view historical data
def view_history():
    history_window = tk.Toplevel(root)
    history_window.title("BMI History")
    
    c.execute("SELECT * FROM bmi_records")
    records = c.fetchall()
    
    if records:
        for idx, record in enumerate(records):
            record_str = f"{record[1]} - BMI: {record[4]} - Date: {record[5]}"
            tk.Label(history_window, text=record_str).grid(row=idx, column=0, sticky="w")
    else:
        tk.Label(history_window, text="No records found.").grid(row=0, column=0)

# Function to plot BMI trend
def plot_trend():
    c.execute("SELECT date, bmi FROM bmi_records")
    records = c.fetchall()
    
    dates = [record[0] for record in records]
    bmis = [record[1] for record in records]
    
    fig, ax = plt.subplots()
    ax.plot(dates, bmis)
    ax.set(xlabel='Date', ylabel='BMI', title='BMI Trend')
    
    plt.xticks(rotation=45)
    
    canvas = FigureCanvasTkAgg(fig, master=root)
    canvas.draw()
    canvas.get_tk_widget().pack()

# GUI setup
root = tk.Tk()
root.title("BMI Calculator")

tk.Label(root, text="Name:").grid(row=0, column=0)
tk.Label(root, text="Weight (kg):").grid(row=1, column=0)
tk.Label(root, text="Height (m):").grid(row=2, column=0)

entry_name = tk.Entry(root)
entry_name.grid(row=0, column=1)
entry_weight = tk.Entry(root)
entry_weight.grid(row=1, column=1)
entry_height = tk.Entry(root)
entry_height.grid(row=2, column=1)

btn_calculate = tk.Button(root, text="Calculate BMI", command=save_record)
btn_calculate.grid(row=3, column=0, columnspan=2, pady=10)

btn_history = tk.Button(root, text="View History", command=view_history)
btn_history.grid(row=4, column=0, columnspan=2, pady=5)

btn_trend = tk.Button(root, text="Plot Trend", command=plot_trend)
btn_trend.grid(row=5, column=0, columnspan=2, pady=5)

root.mainloop()

# Close database connection
conn.close()
